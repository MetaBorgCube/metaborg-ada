module learn-adacore-examples/arrays/restrictions

language ada

test unbounded [[
with Ada.Text_IO;

procedure Unbounded is
	begin
   	declare
   		A : String;
		begin
   		A := "World"; -- illegal
	end;
end Greet;
]] parse succeeds

test different bounds [[
with Ada.Text_IO;

procedure Bounds_differ is
begin
  declare
   	A : String := "Hello";
	begin
   	A := "World";       --  OK: Same size
   	A := "Hello World"; --  Not OK: Different size
	end;
end Bounds_differ;
]] parse succeeds

test indefinite subtypes [[
with Ada.Text_IO; use Ada.Text_IO;

procedure Indefinite_Subtypes is
    function Get_Number return Integer is
    begin
        return Integer'Value (Get_Line);
    end Get_Number;

   A : String := "Hello";
   --  Indefinite subtype

   B : String (1 .. 5) := "Hello";
   --  Definite subtype

   C : String (1 .. Get_Number);
   --  Indefinite subtype (Get_Number's value is computed at run-time)
begin
   null;
end Indefinite_Subtypes;
]] parse succeeds