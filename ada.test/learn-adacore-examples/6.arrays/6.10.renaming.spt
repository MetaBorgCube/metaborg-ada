module learn-adacore-examples/arrays/renaming

language ada

test renaming definition [[
package Colors is

   type Color is (Black, Red, Green, Blue, White);

   type Color_Array is array (Positive range <>) of Color;

   procedure Reverse_It (X : in out Color_Array);

end Colors;
]] parse succeeds

test renaming declaration [[
package body Colors is

   procedure Reverse_It (X : in out Color_Array) is
   begin
      for I in X'First .. (X'Last + X'First) / 2 loop
         declare
            Tmp     : Color;
            X_Left  : Color renames X (I);
            X_Right : Color renames X (X'Last + X'First - I);
         begin
            Tmp     := X_Left;
            X_Left  := X_Right;
            X_Right := Tmp;
         end;
      end loop;
   end Reverse_It;

end Colors;
]] parse succeeds

test renaming readability [[
with Ada.Text_IO; use Ada.Text_IO;

with Colors; use Colors;

procedure Test_Reverse_Colors is

   My_Colors : Color_Array (1 .. 5) := (Black, Red, Green, Blue, White);

begin
   for C of My_Colors loop
      Put_Line ("My_Color: " & Color'Image (C));
   end loop;

   New_Line;
   Put_Line ("Reversing My_Color...");
   New_Line;
   Reverse_It (My_Colors);

   for C of My_Colors loop
      Put_Line ("My_Color: " & Color'Image (C));
   end loop;

end Test_Reverse_Colors;
]] parse succeeds